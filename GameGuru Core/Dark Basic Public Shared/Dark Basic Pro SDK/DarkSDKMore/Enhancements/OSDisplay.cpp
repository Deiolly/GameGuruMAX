
////////////////////////////////////////////////////////////////////
// INFORMATION /////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

/*
	DISPLAY COMMANDS
*/

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
// DEFINES AND INCLUDES ////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

//#define DARKSDK	__declspec ( dllexport )
#define DARKSDK	

//#define WIN32_LEAN_AND_MEAN
#include "stdafx.h"
//#include <windows.h>
#include "core.h"
#include "Enchancements.h"

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
// FUNCTIONS ///////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

/*
	// export names for string table -

	GET DISPLAY WIDTH[%L%?GetDisplayWidth@@YAHXZ%
	GET DISPLAY HEIGHT[%L%?GetDisplayHeight@@YAHXZ%
	GET DISPLAY DEPTH[%L%?GetDisplayDepth@@YAHXZ%
	GET DISPLAY REFRESH RATE[%L%?GetDisplayRefreshRate@@YAHXZ%
*/

/*
int GetDisplayWidth ( void )
{
	return GetSystemMetrics ( SM_CXSCREEN );
}

int GetDisplayHeight ( void )
{
	return GetSystemMetrics ( SM_CYSCREEN );
}

int GetDisplayDepth ( void )
{
	DEVMODE DevMode;

	DevMode.dmSize = sizeof ( DEVMODE );
	
	if ( EnumDisplaySettings ( NULL, ENUM_CURRENT_SETTINGS, &DevMode ) )
		return DevMode.dmBitsPerPel;
	
	return -1;
}
*/

int GetDisplayRefreshRate ( void )
{
	DEVMODE DevMode;

	DevMode.dmSize = sizeof ( DEVMODE );
	
	if ( EnumDisplaySettings ( NULL, ENUM_CURRENT_SETTINGS, &DevMode ) )
		return DevMode.dmDisplayFrequency;
	
	return -1;
}

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
