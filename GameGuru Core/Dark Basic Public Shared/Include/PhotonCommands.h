//========================================================================================
// Photon Commands
//========================================================================================
#define FPSCR

// photon core commands
int PhotonInit(LPSTR pRootPath,LPSTR pSiteName,LPSTR pAvatarName,bool bViewAllMode,LPSTR pOptionalPhotonAppID);
void PhotonFree();
void PhotonLoop(void);
int PhotonCloseConnection();
LPSTR PhotonGetSiteName();
int PhotonGetViewAllMode();
bool PhotonPlayerLeaving();
int PhotonPlayerArrived();
int PhotonGetRemap(int iRealPhotonPlayerNr);
void PhotonInitClient();
void PhotonResetClient();
//void PhotonCleanupClient();
void PhotonResetGameStats();

// photon creating/listing lobby/gamerooms
void PhotonGetLobbyList();
int PhotonIsLobbyListCreated();
int PhotonGetLobbyListSize();
LPSTR PhotonGetLobbyListName( int index );
void PhotonSetLobbyName(LPSTR name);
void PhotonCreateLobby();
void PhotonJoinLobby(LPSTR name);
int PhotonGetLobbyUserCount();
int PhotonHasJoinedLobby();
void PhotonLeaveLobby();
LPSTR PhotonGetLobbyUserName( int index);
LPSTR PhotonGetLobbyUserDisplayName( int index);
LPSTR PhotonGetPlayerName(void);

// photon setting up and starting game
int PhotonGetClientServerConnectionStatus();
void PhotonStartServer();
int PhotonIsServerRunning();
int PhotonIsPlayerTheServer();
void PhotonCheckIfGameRunning();
int PhotonIsGameRunning();
int PhotonGetMyPlayerIndex();
int PhotonGetMyRealPlayerNr();
void PhotonSetRoot(LPSTR string );
void PhotonResetFile ( void );
void PhotonSetSendFileCount ( int count, int iOnlySendMapToSpecificPlayer );
void PhotonSendFileBegin ( int index , LPSTR pString, LPSTR pRootPath );
float PhotonGetSendProgress();
void GetSendError( LPSTR pErrorString );
void PhotonGetSendError ( LPSTR pErrorString );
int PhotonSendFileDone();
int PhotonAmIFileSynced();
float PhotonGetFileProgress();
int PhotonIsEveryoneFileSynced();
void PhotonRegisterEveryonePresentAsHere();
void PhotonSetThisPlayerAsCurrentServer();
void PhotonSendIAmLoadedAndReady();
int PhotonIsPlayerLoadedAndReady ( int iRealPlayerNr );
int PhotonIsEveryoneLoadedAndReady();

void PhotonSetPlayerPositionX( float _x );
void PhotonSetPlayerPositionY( float _y );
void PhotonSetPlayerPositionZ( float _z );
void PhotonSetPlayerAngle( float _angle );
void PhotonSetPlayerAlive ( int state );
int PhotonGetPlayerAlive ( int iSlotIndex );
float PhotonGetPlayerPositionX ( int iSlotIndex );
float PhotonGetPlayerPositionY ( int iSlotIndex );
float PhotonGetPlayerPositionZ ( int iSlotIndex );
float PhotonGetPlayerAngle ( int iSlotIndex );

void PhotonSetKeyState ( int key , int state );
int PhotonGetKeyState ( int iSlotIndex, int key );

void PhotonPlayAnimation ( int iSlotIndex, int start, int end, int speed );
int PhotonGetAnimationList();
void PhotonGetNextAnimation();
int PhotonGetAnimationIndex();
int PhotonGetAnimationStart();
int PhotonGetAnimationEnd();
int PhotonGetAnimationSpeed();
void PhotonSetTweening(int iSlotIndex , int flag);

void PhotonShoot ( void );
int PhotonGetShoot ( int iSlotIndex );
void PhotonSetPlayerAppearance( int a );
int PhotonGetPlayerAppearance( int iSlotIndex );

void PhotonSendLua ( int code, int e, int v );
void PhotonSendLuaToPlayer ( int iRealPhotonPlayerID, int code, int e, int v );
void PhotonSendLuaString ( int code, int e, LPSTR s );
void PhotonSendLuaPlayerSpecificString ( int code, int iRealPhotonPlayerNr, LPSTR s );
int PhotonGetLuaList();
void PhotonGetNextLua();
int PhotonGetLuaCommand();
int PhotonGetLuaE();
int PhotonGetLuaV();
LPSTR PhotonGetLuaS(void);

// empty functions so can compile code with Steam Multiplayer references
FPSCR bool SteamOwned ( void );
FPSCR LPSTR SteamGetPlayerName(void);
FPSCR LPSTR SteamGetOtherPlayerName( int index );
FPSCR LPSTR SteamGetPlayerID(void);
FPSCR void SteamLoop(void);
FPSCR int SteamIsOnline(void);
FPSCR void SteamAddAch(void);
void ParseCommandLine( const char *pchCmdLine, const char **ppchServerAddress, const char **ppchLobbyID, bool *pbUseVR );
void SteamInitClient();
FPSCR void SteamCreateLobby();
FPSCR int SteamIsLobbyCreated();
FPSCR void SteamGetLobbyList();
FPSCR int SteamIsLobbyListCreated();
FPSCR int SteamGetLobbyListSize();
FPSCR LPSTR SteamGetLobbyListName( int index );
FPSCR void SteamJoinLobby( int index );
FPSCR int SteamGetLobbyUserCount();
FPSCR int SteamHasJoinedLobby();
FPSCR void SteamStartServer();
FPSCR int SteamIsServerRunning();
FPSCR int SteamIsGameRunning();
FPSCR int SteamGetMyPlayerIndex();
FPSCR void SteamSetPlayerPositionX( float _x);
FPSCR void SteamSetPlayerPositionY( float _y );
FPSCR void SteamSetPlayerPositionZ( float _z );
FPSCR void SteamSetPlayerAngle( float _angle );
FPSCR void SteamSetPlayerScore( int index, int score );
FPSCR float SteamGetPlayerPositionX ( int index );
FPSCR float SteamGetPlayerPositionY ( int index );
FPSCR float SteamGetPlayerPositionZ ( int index );
FPSCR float SteamGetPlayerAngle ( int index );
FPSCR int SteamGetPlayerScore ( int index );
FPSCR void SteamSetBullet ( int index , float x , float y , float z, float anglex, float angley, float anglez, int type, int on );
FPSCR int SteamGetBulletOn ( int index );
FPSCR int SteamGetBulletType ( int index );
FPSCR float SteamGetBulletX ( int index );
FPSCR float SteamGetBulletY ( int index );
FPSCR float SteamGetBulletZ ( int index );
FPSCR float SteamGetBulletAngleX ( int index );
FPSCR float SteamGetBulletAngleY ( int index );
FPSCR float SteamGetBulletAngleZ ( int index );
FPSCR void SteamSetKeyState ( int key , int state );
FPSCR int SteamGetKeyState ( int index, int key );
FPSCR void SteamApplyPlayerDamage ( int index, int damage, int x, int y, int z, int force, int limb );
FPSCR int SteamGetPlayerDamageSource();
FPSCR int SteamGetPlayerDamageX();
FPSCR int SteamGetPlayerDamageY();
FPSCR int SteamGetPlayerDamageZ();
FPSCR int SteamGetPlayerDamageForce();
FPSCR int SteamGetPlayerDamageLimb();
FPSCR int SteamGetPlayerKilledSource( int index );
FPSCR int SteamGetPlayerKilledX( int index );
FPSCR int SteamGetPlayerKilledY( int index );
FPSCR int SteamGetPlayerKilledZ( int index );
FPSCR int SteamGetPlayerKilledForce( int index );
FPSCR int SteamGetPlayerKilledLimb( int index );
FPSCR void SteamKilledBy ( int killedBy, int x, int y, int z, int force, int limb );
FPSCR void SteamKilledSelf();
FPSCR LPSTR SteamGetServerMessage( void );
FPSCR int SteamGetPlayerDamageAmount ();
FPSCR int SteamGetClientServerConnectionStatus();
void SteamResetClient();
void SteamCleanupClient();
void ResetGameStats();
FPSCR void SteamSetPlayerAlive ( int state );
FPSCR int SteamGetPlayerAlive ( int index );
FPSCR void SteamSpawnObject ( int obj, int source, float x, float y, float z );
FPSCR void SteamDeleteObject ( int obj );
FPSCR void SteamDestroy ( int obj );
FPSCR void SteamSendLua ( int code, int e, int v );
FPSCR void SteamSendLuaString ( int code, int e, LPSTR s );
FPSCR int SteamGetLuaList();
FPSCR void SteamGetNextLua();
FPSCR int SteamGetLuaCommand();
FPSCR int SteamGetLuaE();
FPSCR int SteamGetLuaV();
FPSCR LPSTR SteamGetLuaS(void);
FPSCR int SteamGetSpawnList();
FPSCR void SteamGetNextSpawn();
FPSCR int SteamGetSpawnObjectNumber();
FPSCR int SteamGetSpawnObjectSource();
FPSCR float SteamGetSpawnX();
FPSCR float SteamGetSpawnY();
FPSCR float SteamGetSpawnZ();
FPSCR int SteamGetDeleteList();
FPSCR void SteamGetNextDelete();
FPSCR int SteamGetDeleteObjectNumber();
FPSCR int SteamGetDeleteSource();
FPSCR int SteamGetDestroyList();
FPSCR void SteamGetNextDestroy();
FPSCR int SteamGetDestroyObjectNumber();
FPSCR int SteamReadyToSpawn();
FPSCR void SteamSetSendFileCount(int count);
FPSCR void SteamSendFileBegin ( int index , LPSTR pString );
FPSCR int SteamSendFileDone();
FPSCR int SteamAmIFileSynced();
FPSCR int SteamIsEveryoneFileSynced();
FPSCR void SteamSendIAmLoadedAndReady();
FPSCR int SteamIsEveryoneLoadedAndReady();
FPSCR void SteamSendIAmReadyToPlay();
FPSCR int SteamIsEveryoneReadyToPlay();
FPSCR int SteamGetFileProgress();
FPSCR void SteamSetVoiceChat( int on );
FPSCR void SteamSetPlayerAppearance( int a );
FPSCR int SteamGetPlayerAppearance( int index );
FPSCR void SteamSetCollision ( int index, int state );
FPSCR int SteamGetCollisionList();
FPSCR void SteamGetNextCollision();
FPSCR int SteamGetCollisionIndex();
FPSCR int SteamGetCollisionState();
FPSCR void SteamShoot ();
FPSCR int SteamGetShoot ( int index );
FPSCR void SteamPlayAnimation ( int index, int start, int end, int speed );
FPSCR int SteamGetAnimationList();
FPSCR void SteamGetNextAnimation();
FPSCR int SteamGetAnimationIndex();
FPSCR int SteamGetAnimationStart();
FPSCR int SteamGetAnimationEnd();
FPSCR int SteamGetAnimationSpeed();
FPSCR void SteamSetTweening(int index , int flag);
FPSCR LPSTR SteamGetLobbyUserName( int index);
FPSCR void SteamLeaveLobby();
FPSCR void SteamCreateWorkshopItem();
FPSCR void SteamCreateWorkshopItem( LPSTR pString );
FPSCR void SteamDownloadWorkshopItem( LPSTR pString );
FPSCR int SteamIsWorkshopItemDownloaded();
FPSCR int SteamIsWorkshopItemUploaded();
FPSCR LPSTR SteamGetPlayerName(void);
FPSCR LPSTR SteamGetWorkshopID(void);
FPSCR LPSTR SteamGetWorkshopItemPath(void);
FPSCR void SteamGetWorkshopItemPathDLL(LPSTR string );
FPSCR int SteamIsWorkshopLoadingOnDLL();
FPSCR void SteamSetRoot(LPSTR string );
FPSCR void SteamSetLobbyName(LPSTR name );
FPSCR int SteamIsWorkshopItemInstalled(LPSTR idString );
FPSCR int SteamHasSubscriptionWorkshopItemFinished();
FPSCR void SteamSendMyName();
FPSCR int SteamIsOverlayActive();
FPSCR void SteamWorkshopModeOff();
FPSCR void SteamShowAgreement();
FPSCR void SteamEndGame();
FPSCR void SteamSendChat( LPSTR msg );
FPSCR void SteamSendLobbyChat( LPSTR msg );
FPSCR LPSTR SteamGetChat( void );
FPSCR int SteamInkey( int scancode );
FPSCR int SteamCheckSyncedAvatarTexturesWithServer();
FPSCR void SteamSetMyAvatarHeadTextureName(LPSTR sAvatarTexture);
void SteamAvatarClient();
void SteamAvatarServer();
FPSCR int SteamStrCmp( LPSTR s1, LPSTR s2 );
